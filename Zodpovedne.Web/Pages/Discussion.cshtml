@page "/categories/{categoryCode}/{discussionCode}"
@using System.Security.Claims
@using Zodpovedne.Contracts.Enums
@model DiscussionModel
@{
   ViewData["Title"] = Model.Discussion?.Title ?? "Diskuze";
}

<div class="container">
   <div class="row mb-4">
       <div class="col">
           @* Tlačítko zpět na kategorii *@
           <a href="/categories/@Model.CategoryCode" class="btn btn-outline-secondary mb-3">
               <i class="bi bi-arrow-left"></i> Zpět na kategorii
           </a>

           @if (Model.Discussion != null)
           {
               <div class="card">
                   <div class="card-header">
                       <h1 class="h3 mb-0">@Model.Discussion.Title</h1>
                       <div class="text-muted small">
                           <span title="Autor">
                               <i class="bi bi-person"></i> @Model.Discussion.AuthorNickname
                           </span>
                           <span class="mx-2">•</span>
                           <span title="Datum vytvoření">
                               <i class="bi bi-calendar"></i> @Model.Discussion.CreatedAt.ToString("dd.MM.yyyy HH:mm")
                           </span>
                           <span class="mx-2">•</span>
                           <span title="Počet zobrazení">
                               <i class="bi bi-eye"></i> @Model.Discussion.ViewCount
                           </span>
                           @if (Model.Discussion.Type == DiscussionType.Top)
                           {
                               <span class="badge bg-primary ms-2">TOP</span>
                           }
                       </div>
                   </div>
                   <div class="card-body">
                       @Html.Raw(Model.Discussion.Content)
                   </div>
                   <div class="card-footer d-flex justify-content-between align-items-center">
                       @* Sekce pro like diskuze *@
                       <div>
                           @if (Model.CanLikeDiscussion)
                           {
                               <button class="btn @Model.GetLikeButtonClass(Model.Discussion.Likes.CanUserLike)"
                                       onclick="likeDiscussion(@Model.Discussion.Id)"
                                       @(!Model.Discussion.Likes.CanUserLike ? "disabled" : "")>
                                   <i class="bi bi-heart-fill"></i>
                                   <span id="discussion-likes-count">@Model.Discussion.Likes.LikeCount</span>
                               </button>
                           }
                           else
                           {
                               <span class="text-muted">
                                   <i class="bi bi-heart-fill"></i>
                                   @Model.Discussion.Likes.LikeCount
                               </span>
                           }
                       </div>

                       @* Tlačítka pro editaci/smazání *@
                       @if (Model.CanEditDiscussion)
                       {
                           <div class="btn-group">
                               <a href="/categories/@Model.CategoryCode/discussions/@Model.DiscussionCode/edit" class="btn btn-primary">
                                   <i class="bi bi-pencil"></i> Upravit
                               </a>
                               <form method="post" asp-page-handler="DeleteDiscussion" asp-route-id="@Model.Discussion.Id"
                                     class="d-inline" onsubmit="return confirm('Opravdu chcete smazat tuto diskuzi?');">
                                   <button type="submit" class="btn btn-danger">
                                       <i class="bi bi-trash"></i>
                                   </button>
                               </form>
                           </div>
                       }
                   </div>
               </div>

               @* Sekce komentářů *@
               <div class="mt-5">
                   <h3>Komentáře</h3>
                   @if (Model.Discussion.Comments.Any())
                   {
                       @* Zobrazení root komentářů *@
                       foreach (var comment in Model.Discussion.Comments.Where(c => Model.IsRootComment(c)).OrderByDescending(c => c.CreatedAt))
                       {
                           <div class="card mb-3">
                               <div class="card-body">
                                   <div class="d-flex justify-content-between align-items-center mb-2">
                                       <div class="text-muted small">
                                           <i class="bi bi-person"></i> @comment.AuthorNickname
                                           <span class="mx-2">•</span>
                                           @comment.CreatedAt.ToString("dd.MM.yyyy HH:mm")
                                       </div>
                                       @* Like pro komentář *@
                                       <div>
                                           @if (Model.CanLikeComment(comment))
                                           {
                                               <button class="btn btn-sm @Model.GetLikeButtonClass(comment.Likes.CanUserLike)"
                                                       onclick="likeComment(@Model.Discussion.Id, @comment.Id)"
                                                       @(!comment.Likes.CanUserLike ? "disabled" : "")>
                                                   <i class="bi bi-heart-fill"></i>
                                                   <span id="comment-@comment.Id-likes-count">@comment.Likes.LikeCount</span>
                                               </button>
                                           }
                                           else
                                           {
                                               <span class="text-muted">
                                                   <i class="bi bi-heart-fill"></i>
                                                   @comment.Likes.LikeCount
                                               </span>
                                           }
                                       </div>
                                   </div>
                                   <p class="mb-0">@comment.Content</p>

                                   @* Odpovědi na komentář *@
                                   @foreach (var reply in comment.Replies.OrderBy(r => r.CreatedAt))
                                   {
                                       <div class="card-body border-top ms-4 mt-3">
                                           <div class="d-flex justify-content-between align-items-center mb-2">
                                               <div class="text-muted small">
                                                   <i class="bi bi-person"></i> @reply.AuthorNickname
                                                   <span class="mx-2">•</span>
                                                   @reply.CreatedAt.ToString("dd.MM.yyyy HH:mm")
                                               </div>
                                               @* Like pro odpověď *@
                                               <div>
                                                   @if (Model.CanLikeComment(reply))
                                                   {
                                                       <button class="btn btn-sm @Model.GetLikeButtonClass(reply.Likes.CanUserLike)"
                                                               onclick="likeComment(@Model.Discussion.Id, @reply.Id)"
                                                               @(!reply.Likes.CanUserLike ? "disabled" : "")>
                                                           <i class="bi bi-heart-fill"></i>
                                                           <span id="comment-@reply.Id-likes-count">@reply.Likes.LikeCount</span>
                                                       </button>
                                                   }
                                                   else
                                                   {
                                                       <span class="text-muted">
                                                           <i class="bi bi-heart-fill"></i>
                                                           @reply.Likes.LikeCount
                                                       </span>
                                                   }
                                               </div>
                                           </div>
                                           <p class="mb-0">@reply.Content</p>
                                       </div>
                                   }

                                   @* Tlačítko pro odpověď na komentář *@
                                   @if (Model.IsUserLoggedIn)
                                   {
                                       <div class="mt-3">
                                           <button class="btn btn-sm btn-outline-primary" onclick="showReplyForm(@comment.Id)">
                                               <i class="bi bi-reply"></i> Odpovědět
                                           </button>
                                       </div>
                                   }
                               </div>
                           </div>
                       }
                   }
                   else
                   {
                       <p>Zatím žádné komentáře.</p>
                   }

                   @* Formulář pro nový komentář *@
                   @if (Model.IsUserLoggedIn)
                   {
                       <div class="card mt-4">
                           <div class="card-body">
                               <h5>Přidat komentář</h5>
                               <form method="post" asp-page-handler="AddComment">
                                   <textarea name="content" class="form-control" rows="3" required></textarea>
                                   <button type="submit" class="btn btn-primary mt-2">Odeslat</button>
                               </form>
                           </div>
                       </div>
                   }
               </div>
           }
       </div>
   </div>
</div>

@* Skrytý input pro API URL *@
<input type="hidden" id="apiBaseUrl" value="@Model.ApiBaseUrl" />

@section Scripts {
   @if (Model.IsUserLoggedIn)
   {
       <script>
           sessionStorage.setItem('JWTToken', '@Model.JwtToken');
       </script>
   }

   <script>
       async function likeDiscussion(discussionId) {
           try {
               const apiBaseUrl = document.getElementById('apiBaseUrl').value;
               const response = await fetch(`${apiBaseUrl}/api/discussions/${discussionId}/like`, {
                   method: 'POST',
                   headers: {
                       'Authorization': `Bearer ${sessionStorage.getItem('JWTToken')}`,
                       'Content-Type': 'application/json'
                   }
               });

               if (response.ok) {
                   const result = await response.json();
                   document.getElementById('discussion-likes-count').textContent = result.likeCount;
                   if (!result.canUserLike) {
                       const button = document.querySelector(`button[onclick="likeDiscussion(${discussionId})"]`);
                       button.disabled = true;
                       button.classList.replace('btn-outline-primary', 'btn-outline-secondary');
                   }
               } else {
                   alert('Nepodařilo se přidat like.');
               }
           } catch (error) {
               console.error('Chyba při přidávání like:', error);
               alert('Došlo k chybě při přidávání like.');
           }
       }

       async function likeComment(discussionId, commentId) {
           try {
               const apiBaseUrl = document.getElementById('apiBaseUrl').value;
               const response = await fetch(`${apiBaseUrl}/api/discussions/${discussionId}/comments/${commentId}/like`, {
                   method: 'POST',
                   headers: {
                       'Authorization': `Bearer ${sessionStorage.getItem('JWTToken')}`,
                       'Content-Type': 'application/json'
                   }
               });

               if (response.ok) {
                   const result = await response.json();
                   document.getElementById(`comment-${commentId}-likes-count`).textContent = result.likeCount;
                   if (!result.canUserLike) {
                       const button = document.querySelector(`button[onclick="likeComment(${discussionId}, ${commentId})"]`);
                       button.disabled = true;
                       button.classList.replace('btn-outline-primary', 'btn-outline-secondary');
                   }
               } else {
                   alert('Nepodařilo se přidat like.');
               }
           } catch (error) {
               console.error('Chyba při přidávání like:', error);
               alert('Došlo k chybě při přidávání like.');
           }
       }

       // Funkcionalita pro odpovědi na komentáře
       function showReplyForm(commentId) {
           // TODO: Implementovat zobrazení formuláře pro odpověď
       }
   </script>

   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
}